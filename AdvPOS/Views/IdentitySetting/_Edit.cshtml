@model AdvPOS.Models.CommonViewModel.DefaultIdentityOptionsCRUDViewModel
@{
    ViewData["Title"] = "Default Identity Options";
}

<form id="frmDefaultIdentityOptions">
    <input type="hidden" asp-for="@Model.Id" />
    <input type="hidden" asp-for="@Model.CreatedDate" />
    <input type="hidden" asp-for="@Model.ModifiedDate" />
    <input type="hidden" asp-for="@Model.CreatedBy" />
    <input type="hidden" asp-for="@Model.ModifiedBy" />
    <input type="hidden" asp-for="@Model.Cancelled" />

    <table class="CustomBlueTable">
        <tr>
            <th style="width: 35%;">@Html.DisplayNameFor(model => model.PasswordRequireDigit)</th>
            <td>
                <input asp-for="PasswordRequireDigit" class="form-control" autofocus />
                <span asp-validation-for="PasswordRequireDigit" class="text-danger"></span>
            </td>
        </tr>
        <tr>
            <th>@Html.DisplayNameFor(model => model.PasswordRequiredLength)</th>
            <td>
                <input asp-for="PasswordRequiredLength" class="form-control" autofocus />
                <span asp-validation-for="PasswordRequiredLength" class="text-danger"></span>
            </td>
        </tr>
        <tr>
            <th>@Html.DisplayNameFor(model => model.PasswordRequireNonAlphanumeric)</th>
            <td>
                <input asp-for="PasswordRequireNonAlphanumeric" class="form-control" autofocus />
                <span asp-validation-for="PasswordRequireNonAlphanumeric" class="text-danger"></span>
            </td>
        </tr>
        <tr>
            <th>@Html.DisplayNameFor(model => model.PasswordRequireUppercase)</th>
            <td>
                <input asp-for="PasswordRequireUppercase" class="form-control" autofocus />
                <span asp-validation-for="PasswordRequireUppercase" class="text-danger"></span>
            </td>
        </tr>
        <tr>
            <th>@Html.DisplayNameFor(model => model.PasswordRequireLowercase)</th>
            <td>
                <input asp-for="PasswordRequireLowercase" class="form-control" autofocus />
                <span asp-validation-for="PasswordRequireLowercase" class="text-danger"></span>
            </td>
        </tr>
        <tr>
            <th>@Html.DisplayNameFor(model => model.PasswordRequiredUniqueChars)</th>
            <td>
                <input asp-for="PasswordRequiredUniqueChars" class="form-control" autofocus />
                <span asp-validation-for="PasswordRequiredUniqueChars" class="text-danger"></span>
            </td>
        </tr>
        <tr>
            <th>@Html.DisplayNameFor(model => model.LockoutDefaultLockoutTimeSpanInMinutes)</th>
            <td>
                <input asp-for="LockoutDefaultLockoutTimeSpanInMinutes" class="form-control" autofocus />
                <span asp-validation-for="LockoutDefaultLockoutTimeSpanInMinutes" class="text-danger"></span>
            </td>
        </tr>
        <tr>
            <th>@Html.DisplayNameFor(model => model.LockoutMaxFailedAccessAttempts)</th>
            <td>
                <input asp-for="LockoutMaxFailedAccessAttempts" class="form-control" autofocus />
                <span asp-validation-for="LockoutMaxFailedAccessAttempts" class="text-danger"></span>
            </td>
        </tr>
        <tr>
            <th>@Html.DisplayNameFor(model => model.LockoutAllowedForNewUsers)</th>
            <td>
                <input asp-for="LockoutAllowedForNewUsers" class="form-control" autofocus />
                <span asp-validation-for="LockoutAllowedForNewUsers" class="text-danger"></span>
            </td>
        </tr>
        <tr>
            <th>@Html.DisplayNameFor(model => model.UserRequireUniqueEmail)</th>
            <td>
                <input asp-for="UserRequireUniqueEmail" class="form-control" autofocus />
                <span asp-validation-for="UserRequireUniqueEmail" class="text-danger"></span>
            </td>
        </tr>
        <tr>
            <th>@Html.DisplayNameFor(model => model.SignInRequireConfirmedEmail)</th>
            <td>
                <input asp-for="SignInRequireConfirmedEmail" class="form-control" autofocus />
                <span asp-validation-for="SignInRequireConfirmedEmail" class="text-danger"></span>
            </td>
        </tr>
        <tr>
            <th>@Html.DisplayNameFor(model => model.SlidingExpiration)</th>
            <td>
                <input asp-for="SlidingExpiration" class="form-control" autofocus readonly />
                <span asp-validation-for="SlidingExpiration" class="text-danger"></span>
            </td>
        </tr>

        <tr>
            <th>@Html.DisplayNameFor(model => model.CookieHttpOnly)</th>
            <td>
                @Model.CookieHttpOnly
            </td>
        </tr>
        <tr>
            <th>@Html.DisplayNameFor(model => model.CookieExpiration)</th>
            <td>
                @Model.CookieExpiration
            </td>
        </tr>
        <tr>
            <th>@Html.DisplayNameFor(model => model.CookieExpireTimeSpan)</th>
            <td>
                @Model.CookieExpireTimeSpan                
            </td>
        </tr>
        <tr>
            <th>@Html.DisplayNameFor(model => model.LoginPath)</th>
            <td>
                @Model.LoginPath
            </td>
        </tr>
        <tr>
            <th>@Html.DisplayNameFor(model => model.LogoutPath)</th>
            <td>
                @Model.LogoutPath
            </td>
        </tr>
        <tr>
            <th>@Html.DisplayNameFor(model => model.AccessDeniedPath)</th>
            <td>
                @Model.AccessDeniedPath
            </td>
        </tr>

        <tr>
            <th></th>
            <td>
                <input type="button" id="btnSave" value="Save" onclick="UpdateDefaultIdentityOptions()" class="btn btn-info">
                <button type="button" id="btnClose" class="btn btn-danger" data-dismiss="modal">Close</button>
            </td>
        </tr>
    </table>
</form>

<style>
    .CustomBlueTable td, #CustomBlueTable th {
        padding: 5px;
    }
</style>
